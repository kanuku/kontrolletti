# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

#################### SWAGGER ####################
GET    /swagger                                                                      controllers.Application.swagger
GET    /api-docs                                                                     controllers.ApiHelpController.getResources

#################### Mapping to endpoints ####################
GET    /api-docs/api/repos                                                           controllers.ApiHelpController.getResource(path="/api/repos") 
GET    /api-docs/api/hosts                                                           controllers.ApiHelpController.getResource(path="/api/hosts") 

# Map static scm from the /public folder to the /assets URL path
GET    /assets/*file                                                                 controllers.Assets.at(path="/public", file)
GET    /status                                                                       controllers.Application.status

#################### ENDPOINTS ####################

# REPOS
HEAD   /api/repos/:repositoryUrl                                                     @endpoint.RepoWS.normalize(repositoryUrl: String)
GET    /api/repos/:repositoryUrl                                                     @endpoint.RepoWS.byUrl(repositoryUrl: String)

# COMMITS 
GET    /api/hosts/:host/projects/:project/repos/:repository/commits/:id              @endpoint.CommitWS.byId(host: String, project: String, repository: String, id: String)
GET    /api/hosts/:host/projects/:project/repos/:repository/commits                  @endpoint.CommitWS.commits(host: String, project: String, repository: String, since:Option[String] , until:Option[String])
GET    /api/hosts/:host/projects/:project/repos/:repository/diff/:source...:target   @endpoint.CommitWS.diff(host: String, project: String, repository: String, source:String, target:String)

# TICKETS 
GET    /api/hosts/:host/projects/:project/repos/:repository/tickets                  @endpoint.TicketWS.tickets(host: String, project: String, repository: String, since:Option[String] , until:Option[String])